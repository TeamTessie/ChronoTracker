{
  "name": "dataurl",
  "version": "0.1.0",
  "description": "Tools for dealing with DataURLs",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {},
  "devDependencies": {
    "tap": "~0.4.0"
  },
  "scripts": {
    "test": "make"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/brianloveswords/dataurl.git"
  },
  "keywords": [
    "datauri",
    "dataurl",
    "stream"
  ],
  "author": {
    "name": "Brian J. Brennan"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "ab7ea8a693ffd4d02c041a1880b7f440307a0693",
  "readme": "# dataurl [![Build Status](https://travis-ci.org/brianloveswords/dataurl.png?branch=master)](https://travis-ci.org/brianloveswords/dataurl)\n\n# Install\n```bash\n$ npm install dataurl\n```\n\n# Usage\n\n## dataurl.parse(string)\nParses a dataurl string. Returns an object with three properties:\n\n* `data` <Buffer>: unencoded data\n* `mimetype` <String>: mimetype of the data, something like `'image/png'`\n* `charset` <String>:  charset of the data, if specified\n\nIf the input string isn't a valid dataURL, returns `false`.\n\n## dataurl.stream(options)\nCreates a Read/Write Stream for encoding data as a DataURL.\n\nOptions expects up to three properties:\n\n* `mimetype` <String>: Required\n* `charset` <String>: Optional\n* `encoded` <Boolean>: Optional\n\nResulting stream will emit a data event for the header, then emit 'data'\nevents for each chunk (base64 encoded, if necessary) as they pass\nthrough.\n\nExample:\n\n```js\nfs.createReadStream(pathToSomeImage).pipe(\n  dataurl.stream({ mimetype: 'image/png'})\n).pipe(process.stderr, {end: false});\n```\n\n## dataurl.format(options)<br>dataurl.convert(options)\nConverts some data to a dataurl string. Options expects up to four properties\n\n* `data` <Buffer>: Required\n* `mimetype` <String>: Required\n* `charset` <String>: Optional\n* `encoded` <Boolean>: Optional, whether to base64 encode the data. Defaults to `true`\n\n# License\n\nMIT\n\n```\nCopyright (c) 2013 Brian J. Brennan\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n",
  "_id": "dataurl@0.1.0",
  "dist": {
    "shasum": "1f4734feddec05ffe445747978d86759c4b33199",
    "tarball": "http://registry.npmjs.org/dataurl/-/dataurl-0.1.0.tgz"
  },
  "_from": "dataurl@0.1.0",
  "_npmVersion": "1.2.2",
  "_npmUser": {
    "name": "brianloveswords",
    "email": "brian@nyhacker.org"
  },
  "maintainers": [
    {
      "name": "brianloveswords",
      "email": "brian@nyhacker.org"
    }
  ],
  "_shasum": "1f4734feddec05ffe445747978d86759c4b33199",
  "_resolved": "https://registry.npmjs.org/dataurl/-/dataurl-0.1.0.tgz",
  "bugs": {
    "url": "https://github.com/brianloveswords/dataurl/issues"
  },
  "homepage": "https://github.com/brianloveswords/dataurl#readme"
}
