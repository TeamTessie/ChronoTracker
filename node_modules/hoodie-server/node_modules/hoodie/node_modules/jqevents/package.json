{
  "name": "jqevents",
  "version": "0.1.1",
  "description": "jqevents is a node.js event emitter based on jquery events system",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jbrumwell/jqevents.git"
  },
  "devDependencies": {
    "chai": "*",
    "mocha": "*"
  },
  "keywords": [
    "eventemitter",
    "events",
    "jquery"
  ],
  "author": {
    "name": "Jason Brumwell"
  },
  "license": "MIT",
  "readme": "# jQuery Events\r\n\r\n  jqevents is an event emitter based on jquery events system\r\n\r\n## Installation\r\n\r\n    $ npm install jqevents\r\n\r\n## Features\r\n\r\n  - bind, emit and release multiple events at a time\r\n  - Is a global emitter by default and will operate through the process\r\n  - Additional emitters can be created using `jqevents.create();`\r\n  - Uses jquery type namespaces for unbinding and emitting\r\n\r\n## methods\r\n\r\n  - `create` creates an non-global event emitter\r\n\r\n## Events\r\n\r\n  - No new events outside of the internal EventEmitter\r\n\r\n## Usage\r\n\r\nInitiate vitals and add processes\r\n\r\n```js\r\nvar globalEmitter = require('jqevents')();\r\nvar nonGlobalemitter = require('jqevents').create();\r\n```\r\n\r\nAdding events\r\n\r\n```js\r\nemitter.on('one', handler);\r\nemitter.on('one.namespace', handler);\r\nemitter.on('one two', handler);\r\nemitter.on('one.namespace two.namespace', handler);\r\nemitter.on(['one', 'two'], handler);\r\nemitter.on(['one.namespace', 'two.namespace'], handler);\r\nemitter.on({\r\n   one: handler,\r\n   two: handlerTwo\r\n});\r\nemitter.on({\r\n   \"one.namespace\": handler,\r\n   \"two.namespace\": handlerTwo\r\n});\r\n```\r\n\r\nRemoving events\r\n\r\n```js\r\nemitter.off('one', handler); //removes handler\r\nemitter.off('one'); //removes all events on one\r\nemitter.off('one.ns'); //removes all events on one with namespace ns\r\nemitter.off('.na'); //removes all events with ns namespace\r\nemitter.off('one.ns two.ns2'); //multiple via space\r\nemitter.off(['one.ns', 'two.ns2']); //multiple via array\r\nemitter.off({\r\n   one: handler,\r\n   two: handlerTwo\r\n});\r\nemitter.off({\r\n   \"one.namespace\": handler,\r\n   \"two.namespace\": handlerTwo\r\n});\r\n```\r\n\r\nTriggering events\r\n\r\n```js\r\nemitter.emit('event'); //calls all handlers\r\nemitter.emit('event.ns'); //calls only the handlers with ns as a namespace\r\nemitter.emit('event.ns.another'); //call multiple namespaces under an event\r\n```\r\n\r\n## Examples\r\n\r\nGetting the event & namespaces that emitted the event\r\n\r\n```js\r\nemitter.on('fired.byme.orme', function() {\r\n    console.log(emitter.emitting);\r\n});\r\n\r\nemitter.emit('fired fired.byme fired.orme');\r\n```\r\n\r\nWorking with Namespaces\r\n\r\n```js\r\n//will trigger on emit('fired');\r\nemitter.on('fired', function() {\r\n    console.log('yes');\r\n});\r\n\r\n//will trigger on emit('fired') and emit('fired.one');\r\nemitter.on('fired.one', function() {\r\n    console.log('yes');\r\n});\r\n\r\n//will trigger on emit('fired'), emit('fired.one') and emit('fired.two')\r\nemitter.on('fired.one.two', function() {\r\n    console.log('yes');\r\n});\r\n```\r\n\r\n## Running tests\r\n\r\n```\r\n$ npm install\r\n$ npm test\r\n```\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\n",
  "_id": "jqevents@0.1.1",
  "dist": {
    "shasum": "215e5887402de2fee9365c95f9dd8de8e7631ca9",
    "tarball": "http://registry.npmjs.org/jqevents/-/jqevents-0.1.1.tgz"
  },
  "_npmVersion": "1.1.63",
  "_npmUser": {
    "name": "jbrumwell",
    "email": "jbrumwell@readynetwork.ca"
  },
  "maintainers": [
    {
      "name": "jbrumwell",
      "email": "jbrumwell@readynetwork.ca"
    }
  ],
  "_shasum": "215e5887402de2fee9365c95f9dd8de8e7631ca9",
  "_resolved": "https://registry.npmjs.org/jqevents/-/jqevents-0.1.1.tgz",
  "_from": "jqevents@>=0.1.1 <0.2.0",
  "bugs": {
    "url": "https://github.com/jbrumwell/jqevents/issues"
  },
  "homepage": "https://github.com/jbrumwell/jqevents#readme"
}
